diff --git a/felix.pages.inc b/felix.pages.inc
index 985c059..60b9744 100644
--- a/felix.pages.inc
+++ b/felix.pages.inc
@@ -134,7 +134,7 @@ function _felix_add_block_nodetype_page($region, $nodetype, $path, $viewmode) {
           ->orderBy('n.changed', 'DESC')
           ->range(0, 10)
           ->addTag('node_access');
-  $q->join('users', 'u', 'n.uid = u.uid');        
+  $q->join('users', 'u', 'n.uid = u.uid');
   $nodes = $q->execute();
   $items = array();
 
@@ -151,7 +151,7 @@ function _felix_add_block_nodetype_page($region, $nodetype, $path, $viewmode) {
 
   while ($node = $nodes->fetchObject()) {
     $table['#nodes'][] = $node;
-    
+
     $url = l($node->title, 'felix-blocks/add', array(
       'query' => array(
         'nid' => $node->nid,
@@ -168,10 +168,10 @@ function _felix_add_block_nodetype_page($region, $nodetype, $path, $viewmode) {
       format_date($node->created, 'short'),
     );
   }
-  
+
   // Allow other modules to alter the recent content table.
   drupal_alter('felix_recent_content', $table);
-  
+
   if (count($table['#rows'])) {
     $output .= drupal_render($table);
   }
@@ -187,7 +187,7 @@ function _felix_add_block_nodetype_page($region, $nodetype, $path, $viewmode) {
  */
 function _felix_autocomplete($type) {
   $search = $_GET['s'];
-  
+
   $results = array();
   $nodes = db_select('node', 'n')
     ->fields('n', array('nid', 'title', 'changed'))
@@ -207,10 +207,10 @@ function _felix_autocomplete($type) {
       'addClass' => NULL,
     );
   }
-  
+
   // Let other modules alter the autocomplete results.
   drupal_alter('felix_autocomplete', $results);
-  
+
   if (empty($results)) {
     $results = array(array(
       'title' => t('No results'),
@@ -218,7 +218,7 @@ function _felix_autocomplete($type) {
       'disabled' => TRUE,
     ));
   }
-  
+
   drupal_json_output($results);
   drupal_exit();
 }
@@ -238,7 +238,7 @@ function felix_add_node_form($form, &$form_state, $region, $nodetype, $path, $vi
     '#autocomplete_path' => 'felix-blocks/autocomplete-node/' . $nodetype,
     '#required' => TRUE,
   );
-  
+
   if (module_exists('linkit')) {
     // Use the better autocomplete widget from linkit.
     drupal_add_library('linkit', 'linkit_bac');
@@ -321,7 +321,7 @@ function _felix_add_block($region, $path, $module, $delta, $detail_path = NULL,
     $delta = $tnid ? $tnid : $delta;
     $detail_path = "node/$delta";
   }
-  
+
   $hash = _felix_get_hash($region, $path);
 
   $block = new stdClass();
@@ -386,25 +386,36 @@ function _felix_add_block_list_page($region, $path) {
           ->orderBy('b.module')
           ->execute()
           ->fetchAll();
+  $modules = array();
+  $deltas = array();
   foreach ($blocks as $block) {
-    $info = module_invoke($block->module, 'block_info');
-    if (!isset($info[$block->delta])) {
-      continue;
+    if (!isset($deltas[$block->module])) {
+      $deltas[$block->module] = array();
     }
-    if (!isset($items[$block->module])) {
-      $items[$block->module] = array();
+    $deltas[$block->module][] = $block->delta;
+  }
+  $modules = array_keys($deltas);
+  foreach ($modules as $module) {
+    $info = module_invoke($module, 'block_info');
+    foreach ($info as $delta => $block) {
+      if (!in_array($delta, $deltas[$module]) && !in_array('*', $deltas[$module])) {
+        continue;
+      }
+      if (!isset($items[$module])) {
+        $items[$module] = array();
+      }
+      $items[$module][] = array(
+        'title' => $info[$delta]['info'],
+        'href' => 'felix-blocks/add',
+        'query' => array(
+          'module' => $module,
+          'delta' => $delta,
+          'region' => $region->name,
+          'path' => $path,
+          'token' => drupal_get_token($module . $delta . $region->name),
+        ),
+      );
     }
-    $items[$block->module][] = array(
-      'title' => $info[$block->delta]['info'],
-      'href' => 'felix-blocks/add',
-      'query' => array(
-        'module' => $block->module,
-        'delta' => $block->delta,
-        'region' => $region->name,
-        'path' => $path,
-        'token' => drupal_get_token($block->module . $block->delta . $region->name),
-      ),
-    );
   }
 
   $output = '';
diff --git a/ui/felix_ui.pages.inc b/ui/felix_ui.pages.inc
index e4d83aa..6aae9da 100644
--- a/ui/felix_ui.pages.inc
+++ b/ui/felix_ui.pages.inc
@@ -55,7 +55,7 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
     $region->data = unserialize($region->data);
     $form['#felix_region'] = $region;
   }
-  
+
   if (empty($form_state['storage'])) {
     $values = array();
     $rehash = FALSE;
@@ -64,10 +64,10 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
     $values = $form_state['storage']['values'];
     $rehash = !empty($form_state['storage']['rehash']);
   }
-  
+
   if ($rehash) {
     // Build the second page (rehash review / options).
-    
+
     $added = $form_state['storage']['hash_added'];
     $removed = $form_state['storage']['hash_removed'];
     $form['info'] = array(
@@ -94,7 +94,7 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
         );
       }
     }
-    
+
     $form['rehash'] = array(
       '#type' => 'submit',
       '#value' => t('Save and rehash'),
@@ -102,7 +102,7 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
   }
   else {
     // Build the first page.
-    
+
     $block_sets = db_select('felix_block_set', 'cbs')
             ->fields('cbs', array('name', 'title'))
             ->orderBy('title')
@@ -114,7 +114,7 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
       );
       return $form;
     }
-  
+
     $contexts = context_context_list();
     if (!$contexts) {
       $form['info'] = array(
@@ -122,14 +122,14 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
       );
       return $form;
     }
-  
+
     $form['title'] = array(
       '#type' => 'textfield',
       '#title' => t('Title'),
       '#default_value' => $region ? $region->title : '',
       '#required' => TRUE,
     );
-  
+
     $form['name'] = array(
       '#type' => 'machine_name',
       '#title' => t('Machine name'),
@@ -145,7 +145,7 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
       ),
       '#disabled' => empty($region) ? FALSE : TRUE,
     );
-  
+
     $options = array();
     $themes = system_get_info('theme');
     foreach ($themes as $theme) {
@@ -157,14 +157,14 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
       '#options' => $options,
       '#default_value' => $region ? $region->region : '',
     );
-  
+
     $form['context'] = array(
       '#type' => 'select',
       '#title' => t('Context'),
       '#options' => $contexts,
       '#default_value' => $region ? $region->context : '',
     );
-  
+
     $form['weight'] = array(
       '#type' => 'textfield',
       '#title' => t('Weight'),
@@ -172,14 +172,14 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
       '#default_value' => $region ? $region->weight : 0,
       '#required' => TRUE,
     );
-  
+
     $form['block_set'] = array(
       '#type' => 'select',
       '#title' => t('Block set'),
       '#options' => $block_sets,
       '#default_value' => $region ? $region->block_set : '',
     );
-  
+
     $options = module_invoke_all('felix_hash_options');
     $form['hash'] = array(
       '#type' => 'checkboxes',
@@ -187,7 +187,7 @@ function felix_ui_region_form($form, &$form_state, $region = NULL) {
       '#options' => $options,
       '#default_value' => $region ? $region->data['hash'] : array(),
     );
-    
+
     $form['submit'] = array(
       '#type' => 'submit',
       '#value' => t('Save'),
@@ -215,7 +215,7 @@ function felix_ui_region_form_validate($form, &$form_state) {
 function felix_ui_region_form_submit($form, &$form_state) {
   $values = empty($form_state['storage']) ? array() : $form_state['storage']['values'];
   $values += $form_state['values'];
-  
+
   $region = new stdClass();
   $region->name = $values['name'];
   $region->title = $values['title'];
@@ -227,14 +227,14 @@ function felix_ui_region_form_submit($form, &$form_state) {
   $data = empty($form['#felix_region']) ? array() : $form['#felix_region']->data;
   $data['hash'] = array_keys(array_filter($values['hash']));
   $region->data = serialize($data);
-  
+
   $rehash = FALSE;
   if (!empty($form['#felix_region'])) {
     $removed = array_values(array_diff($form['#felix_region']->data['hash'], $data['hash']));
     $added = array_values(array_diff($data['hash'], $form['#felix_region']->data['hash']));
     $rehash = $removed || $added;
   }
-  
+
   if ($rehash) {
     if ($form_state['clicked_button']['#value'] == t('Save and rehash')) {
       // Save region and start batch to rehash blocks.
@@ -409,15 +409,6 @@ function felix_ui_set_form($form, &$form_state, $set = NULL) {
     $name = $info['name'];
     $package = $info['package'];
 
-    if (!$blocks = module_invoke($module, 'block_info')) {
-      continue;
-    }
-
-    $options = array();
-    foreach ($blocks as $delta => $block) {
-      $options[$delta] = $block['info'];
-    }
-
     if (!isset($form['packages'][$package])) {
       $form['packages'][$package] = array(
         '#type' => 'fieldset',
@@ -427,6 +418,14 @@ function felix_ui_set_form($form, &$form_state, $set = NULL) {
       );
     }
 
+    $options = array(
+      '*' => '<em>' . t('All') . '</em>',
+    );
+    $blocks = module_invoke($module, 'block_info');
+    foreach ($blocks as $delta => $block) {
+      $options[$delta] = $block['info'];
+    }
+
     $form['packages'][$package]["module_$module"] = array(
       '#type' => 'checkboxes',
       '#title' => check_plain($name),
