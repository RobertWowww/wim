<?php

/**
 * Implements hook_permission().
 */
function atos_esuite_permission() {
  return array(
    'administer atos_esuite settings' => array(
      'title' => t('Administer atos_esuite settings'),
      'description' => t('Allows users to configure atos_esuite settings.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function atos_esuite_menu() {
  $items = array();

  $items['admin/config/content/atos-esuite'] = array(
    'title' => 'Atos eSuite',
    'description' => 'Atos import settings.',
    'page arguments' => array('atos_esuite_admin_settings_form'),
    'page callback' => 'drupal_get_form',
    'access arguments' => array('administer atos_esuite settings'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'atos_esuite.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_node_delete().
 */
function atos_esuite_node_delete($node) {
  if (in_array($node->type, array('product', 'vac'))) {
    db_delete('atos_esuite')->condition('nid', $node->nid)->execute();
  }
}

/**
 * Implements hook_cron().
 */
function atos_esuite_cron() {
  module_load_include('inc', 'atos_esuite', 'atos_esuite.import');

  $context = array('results' => array());

  _atos_esuite_batch_run('product', variable_get('atos_esuite_pdc_url', ''), $context);
  _atos_esuite_batch_run('vac', variable_get('atos_esuite_vac_url', ''), $context);

  if (count($context['results']) > 0) {
    watchdog(
      'atos_esuite',
      '@num_results results processed: !results',
      array(
        '@num_results' => count($context['results']),
        '!results' => theme('item_list', array('items' => $context['results']))
      ),
      WATCHDOG_INFO
    );
  }
}
