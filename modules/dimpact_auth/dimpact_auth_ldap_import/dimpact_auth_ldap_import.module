<?php

/**
 * Implements hook_dimpact_auth_authnames_to_delete().
 */
function dimpact_auth_ldap_import_dimpact_auth_authnames_to_delete() {
  $sql = 'SELECT da.authname FROM {dimpact_auth} da LEFT JOIN {dimpact_auth_ldap_import} dli ON da.authname=dli.sn WHERE dli.sn IS NULL';
  $authnames = db_query($sql)->fetchCol();
  return $authnames;
}

/**
 * Implements hook_dimpact_auth_authnames_check_update().
 */
function dimpact_auth_ldap_import_dimpact_auth_authnames_check_update() {
  $existing = array();
  $sql = 'SELECT da.authname, da.hash FROM {dimpact_auth} da INNER JOIN {authmap} am ON da.authname=am.authname INNER JOIN {dimpact_auth_ldap_import} dli ON da.authname=dli.sn WHERE da.needs_updating=0';
  $result = db_query($sql);
  foreach ($result as $row) {
    $existing[$row->authname] = $row->hash;
  }
  return $existing;
}

/**
 * Implements hook_dimpact_auth_authnames_to_insert().
 */
function dimpact_auth_ldap_import_dimpact_auth_authnames_to_insert() {
  $sql = 'SELECT dli.sn FROM {dimpact_auth_ldap_import} dli LEFT JOIN {dimpact_auth} da ON dli.sn=da.authname WHERE da.authname IS NULL and dli.sn IS NOT NULL';
  $authnames = db_query($sql)->fetchCol();
  return $authnames;
}

/**
 * Implements hook_dimpact_auth_load().
 */
function dimpact_auth_ldap_import_dimpact_auth_load($authname) {
  $sql = 'SELECT * FROM {dimpact_auth_ldap_import} dli INNER JOIN {dimpact_auth} da ON dli.sn=da.authname WHERE da.authname=:authname';
  return db_query($sql, array(':authname' => $authname))->fetchAssoc();
}

/**
 * Implements hook dimpact_auth_field_update().
 *
 */
function dimpact_auth_ldap_import_dimpact_auth_field_update($dimpact_user_data, &$edit, $account) {
  if (isset($dimpact_user_data['email']) && valid_email_address($dimpact_user_data['email'])) {
    $edit['mail'] = $dimpact_user_data['email'];
  }
}
