<?php

/**
 * @file
 * Maintains a Dimpact user directory for authentication.
 */
 
/**
 * Implements hook_form_FORM_ID_alter().
 */
function dimpact_auth_form_user_login_alter(&$form, $form_state ) { print_r($form);
  // Drupal authentication is tried first to allow user 1 to log in.
  if (in_array('user_login_authenticate_validate', $form['#validate'])) {
    $key = array_search('user_login_authenticate_validate', $form['#validate']);
    array_splice($form['#validate'], $key + 1, 0, 'dimpact_auth_login_validate');
  }
}

/**
 * @see user_login_authenticate_validate
 */
function dimpact_auth_login_validate($form, &$form_state) {
  // User 1 is allowed to log in with Drupal authentication.
  if (isset($form_state['uid']) && is_numeric($form_state['uid']) && $form_state['uid'] == 1) {
    return;
  }
  else {
    unset($form_state['uid']);
  }

  $password = trim($form_state['values']['pass']);
  $password_ok = FALSE;

  $directory_account = db_query("SELECT * FROM {dimpact_auth} WHERE authname = :authname", array(':authname' => $form_state['values']['name']))->fetchObject();
  if ($directory_account) {
    $account = user_external_load($directory_account->authname);
  }

  // Check password (existing Drupal account).
  if ($directory_account && $account && user_check_password($password, $account)) {
    $password_ok = TRUE;
  }

  // Check password (no Drupal account yet).
  if ($directory_account && !$account) {
    $initial_password_field = variable_get('dimpact_auth_initial_password_field', 'authname');
    $initial_password_field_prefix = variable_get('dimpact_auth_initial_password_field_prefix');
    if ($password === $initial_password_field_prefix . $directory_account->{$initial_password_field}) {
      $password_ok = TRUE;
    }
  }

  // Log in if password is ok.
  if ($password_ok) {
    user_external_login_register($directory_account->authname, 'dimpact_auth');
  }
}
