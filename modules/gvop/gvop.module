<?php

/**
 * Implements hook_permission().
 */
function gvop_permission() {
  return array(
    'start gvop import' => array(
      'title' => t('Start GVOP import'),
    ),
  );
}
/**
 * Implements hook_menu().
 */
function gvop_menu() {
  $items = array();

  $items['admin/config/content/gvop'] = array(
    'title' => 'GVOP',
    'description' => 'Configure GVOP settings.',
    'page arguments' => array('gvop_admin_settings_form'),
    'page callback' => 'drupal_get_form',
    'access arguments' => array('start gvop import'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'gvop.admin.inc',
  );

  return $items;
}

/**
 * Implements hook_cron().
 */
function gvop_cron() {
  module_load_include('inc', 'gvop', 'gvop.import');
  gvop_import_batch_start();
}

/**
 * Implements hook_node_delete().
 */
function gvop_node_delete($node) {
  $nodetypes = array();
  $gvop_info = module_invoke_all('gvop_info');
  foreach ($gvop_info as $type_info) {
    $nodetypes[] = $type_info['nodetype'];
  }
  if (in_array($node->type, $nodetypes)) {
    db_delete('gvop')->condition('nid', $node->nid)->execute();
  }
}

/**
 * Worker for gvop_retrieve_items_queue_worker.
 */
function gvop_retrieve_items_queue_worker($item) {
  module_load_include('inc', 'gvop', 'gvop.import');

  // Retreive the items.
  $dom = _gvop_retrieve_dom($item->type_info, $item->offset, $item->limit);

  // Setup the queue.
  $queue = DrupalQueue::get('gvop_map_node_queue');

  // Add items.
  $records = $dom->getElementsByTagName("gzd");
  foreach ($records as $record) {
    $queue_item = new stdClass();
    $queue_item->type_info = $item->type_info;
    $queue_item->recordXML =  $record->ownerDocument->saveXML($record);
    $queue->createItem($queue_item);
  }
}

/**
 * Worker for gvop_map_node_queue_worker..
 */
function gvop_map_node_queue_worker($item) {
  module_load_include('inc', 'gvop', 'gvop.import');

  // Setup DOM and XPath..
  $record = new DOMDocument();
  $record->loadXML($item->recordXML);
  $xpath = new DOMXPath($record);
  $xpath->registerNamespace('dcterms', 'http://purl.org/dc/terms/');
  $xpath->registerNamespace('overheid', 'http://standaarden.overheid.nl/owms/terms/');
  $xpath->registerNamespace('overheidbm', 'http://standaarden.overheid.nl/bm/terms/');
  $xpath->registerNamespace('overheidproduct', 'http://standaarden.overheid.nl/product/terms/');
  $xpath->registerNamespace('overheidrg', 'http://standaarden.overheid.nl/cvdr/terms/');
  $xpath->registerNamespace('overheidvac', 'http://standaarden.overheid.nl/vac/terms/');
  $xpath->registerNamespace('overheidvg', 'http://standaarden.overheid.nl/vergunningen/terms');

  $node = _gvop_map_node($item->type_info, $record, $xpath);
}