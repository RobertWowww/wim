<?php

/**
 * Implements hook_schema().
 */
function gvop_schema() {
  $schema = array();

  $schema['gvop'] = array(
    'description' => 'Table which saves hashes for the GVOP Import.',
    'fields' => array(
      'identifier' => array(
        'description' => 'Item identifier',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'hash' => array(
        'description' => 'MD5 Hash of XML',
        'type' => 'varchar',
        'length' => '32',
        'not null' => TRUE,
      ),
      'nid' => array(
        'description' => 'Node id',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'xml' => array(
        'type' => 'text',
        'not null' => TRUE,
      ),
      'changed' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
    ),
    'primary key' => array('identifier'),
    'indexes' => array(
      'nid' => array('nid'),
    ),
  );

  return $schema;
}

/**
 * Implementation of hook_uninstall().
 */
function gvop_uninstall() {
  variable_del('gvop_creator');
  variable_del('gvop_limit');
}

/**
 * Implements hook_requirements().
 */
function gvop_requirements($phase) {
  $requirements = array();
  $t = get_t();
  if ($phase == 'runtime') {
    $error = NULL;
    $creator = variable_get('gvop_creator', '');
    if (empty($creator)) {
      $error = $t('No creator set in <a href="@url">GVOP settings</a>.', array(
        '@url' => url('admin/config/content/gvop'),
      ));
    }
    $message = $t('GVOP is importing data with creator %creator. If this is incorrect, please change it in the <a href="@url">GVOP settings</a>.', array(
      '%creator' => $creator,
      '@url' => url('admin/config/content/gvop'),
    ));
    $requirements['gvop'] = array(
      'title' => $t('GVOP'),
      'value' => $error ? $error : $message,
      'severity' => $error ? REQUIREMENT_ERROR : REQUIREMENT_OK,
    );
  }
  return $requirements;
}
